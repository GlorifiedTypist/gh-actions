name: Fargate Deployment
run-name: Deploying Fargate Resources

on:
  workflow_call:
    inputs:
      ECR_REGISTRY:
        required: true
        type: string
      ECR_REPOSITORY:
        required: true
        type: string
      ACCOUNT_ID:
        required: true
        type: string
      CLUSTER_NAME:
        required: true
        type: string
      TASK_DEFINITION:
        required: true
        type: string
      TASK:
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      # - run: echo ${{ inputs.TASK }}
      # - name: Checkout the repository
      #   uses: actions/checkout@v3

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     # role-to-assume: arn:aws:iam::$ACCOUNT_ID:role/ECRAccessRole
      #     role-to-assume: arn:aws:iam::${{ inputs.ACCOUNT_ID }}:role/ECRAccessRole
      #     aws-region: us-east-1

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get changed directories
        id: changed-dirs
        uses: tj-actions/changed-files@v35
        with:
          dir_names: "true"
          files: docker/**

      # - name: Download task definition
      #   run: |
      #       aws ecs describe-task-definition --task-definition ${{ inputs.TASK }} --query taskDefinition > task-definition.json

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./docker/${{ inputs.TASK }}
          push: true
          tags: ${{ inputs.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ inputs.TASK }}:latest

      # - name: Build, tag, and push image to Amazon
      #   id: build-image
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: ${{ inputs.ECR_REGISTRY }}
      #     IMAGE_TAG: latest
      #   run: |
      #     cat task-definition.json
      #     for dir in ${{ steps.changed-dirs.outputs.all_changed_files }}; do
      #       cd $dir
      #       docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      #       docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #       echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      #       cd ..
      #     done

      # - name: Fill in the new image ID in the AWS ECS task definition
      #   id: task-def
      #   uses: aws-actions/amazon-ecs-render-task-definition@v1
      #   with:
      #     task-definition: task-definition.json
      #     container-name: fargate-container
      #     image: ${{ steps.build-image.outputs.image }}

      # - name: Deploy AWS ECS task definition
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      #   with:
      #     task-definition: ${{ steps.task-def.outputs.task-definition }}
      #     service: fargate-node-service
      #     cluster: fargate-node-cluster