name: Fargate Deployment
run-name: Deploying Fargate Resources

on:
  workflow_call:
    inputs:
      ECR_REGISTRY:
        required: true
        type: string
    # secrets:
    #   ROLE_ARN:
    #     required: true

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: self-hosted
    # environment: deploy
    steps:
      - run: echo ${{ secrets.ROLE_ARN }}






















      # - run: echo ${{ inputs.TASK }}
      # - name: Checkout the repository
      #   uses: actions/checkout@v4

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     # role-to-assume: arn:aws:iam::$ACCOUNT_ID:role/ECRAccessRole
      #     # role-to-assume: arn:aws:iam::${{ inputs.ACCOUNT_ID }}:role/ECRAccessRole
      #     aws-region: us-east-1

      # - run: echo "${{ inputs.TASK }}"

      # # otel-metric-aggregation/src/test
      # # 0: otel-metric-aggregation, 1: src, 2: test
      # - uses: winterjung/split@v2
      #   id: deploymet_info
      #   with:
      #     msg: ${{ inputs.TASK }}
      #     separator: "/"

      # - name: Login to AWS ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      # - name: Get changed directories
      #   id: changed-dirs
      #   uses: tj-actions/changed-files@v44
      #   with:
      #     dir_names: "true"
      #     files: docker/**

      # # - name: Download task definition
      # #   run: |
      # #       aws ecs describe-task-definition --task-definition ${{ steps.deploymet_info.outputs._2 }} --query taskDefinition > task-definition.json

      # - name: Update environment
      #   uses: richardrigutins/replace-in-files@v2
      #   with:
      #     files: 'docker/**/Dockerfile'
      #     search-text: '${env}'
      #     replacement-text: 'dev'
      #     encoding: 'utf8'
      #     max-parallelism: 10

      # - run: |
      #     cat docker/otel-metric-aggregation/src/hello/Dockerfile
      #     cat docker/otel-metric-aggregation/src/test/Dockerfile

      # - name: Build and push
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: ./docker/${{ inputs.TASK }}
      #     push: true
      #     tags: ${{ inputs.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ steps.deploymet_info.outputs._2 }}:${{ github.sha }}

      # # - name: Build, tag, and push image to Amazon
      # #   id: build-image
      # #   env:
      # #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      # #     ECR_REPOSITORY: ${{ inputs.ECR_REGISTRY }}
      # #     IMAGE_TAG: latest
      # #   run: |
      # #     cat task-definition.json
      # #     for dir in ${{ steps.changed-dirs.outputs.all_changed_files }}; do
      # #       cd $dir
      # #       docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      # #       docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      # #       echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      # #       cd ..
      # #     done

      # - name: Fill in the new image ID in the AWS ECS task definition
      #   id: task-def
      #   uses: aws-actions/amazon-ecs-render-task-definition@v1
      #   with:
      #     task-definition: task-definition.json
      #     container-name: ${{ steps.deploymet_info.outputs._2 }}-container
      #     image: ${{ inputs.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ steps.deploymet_info.outputs._2 }}:${{ github.sha }}

      # - name: Deploy AWS ECS task definition
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      #   with:
      #     task-definition: ${{ steps.task-def.outputs.task-definition }}
      #     #service: ${{ steps.deploymet_info.outputs._0 }} CHECK THIS
      #     service: fargate-service
      #     cluster: ${{ inputs.CLUSTER_NAME }}